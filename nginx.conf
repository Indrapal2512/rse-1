# RSE Load Balancer config
# Copyright 2010 by Rackspace, Inc. All rights reserved.
# Original version created by Kurt Griffiths (Jungle Disk)

#user http;

#One per CPU
worker_processes  4; # default 1

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    # max_clients = worker_processes * worker_connections/4
    worker_connections 4096; # default 1024
    use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;


    gzip              on;
    gzip_min_length   256;
    gzip_types        text/plain application/x-javascript text/javascript application/json application/json-p;
    gzip_proxied      any;
    gzip_disable      "MSIE [1-6]\.";
    
    upstream rse {
        server unix:/tmp/rse.sock;
    }

    server {
        listen 80;

        # Allow fairly large uploads
        client_max_body_size 5M;

        location = /favicon.ico {
            deny all;
        }
        location = /robots.txt {
            deny all;
        }
        location = / {
            deny all; # Not safe to use an unnamed channel for RSE
        }

        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;            
            proxy_set_header User-Agent $http_user_agent;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://rse;
            #proxy_buffering off;
        }

        #todo: configure SSL
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
